

# 遇到延时操作就会切换任务

# 协程核心: 利用等待的时间去执行其他任务
# 携程依赖线程, 线程依赖进程
# 携程切换任务非常快, 就像调用函数
# 注意: 所有需要耗时的操作都需要进行任务切换, 按道理讲都要使用gevent中的对象, 那么太麻烦
# 通过打补丁 ,  之后可以使用以前的对象
import time
import gevent
from gevent import monkey  # 导入模块
#
# # 有耗时操作时需要
# monkey.patch_all()  # 将程序中用到的耗时操作的代码转换为gevent中自己实现的模块
#
# def test(num):
#     for i in range(num):
#         print(i,"任务执行")
#         # print(gevent.getcurrent(),i)
#         time.sleep(0.5) # 在这里就可以使用以前的模块了,遇到这个延时线程会立马执行其他任务,
#         # gevent.sleep(0.5) # 遇到这个延时线程会立马执行其他任务,
#         print("这是接着上一次的")
#
# g1 = gevent.spawn(test,5) # 创建一个gevent对象
# g2 = gevent.spawn(test,5)
# g3 = gevent.spawn(test,5)
#
#
# g1.join() # 等待个g1 执行结束, 这会耗时, 会切换到任务1 中
# g2.join()
# g3.join()



# 举例子:

# 我开厂了 ,  组装电脑

# 流水线 , 我  桌子, 螺丝刀, 主板 cpu 键盘

# 当我开始组装电脑的时候  这个东西 相当于一个进程
# 流水线中的 我这人就是线程, 我在执行任务

# 多线程:  流水线上多个工人一起生产 ,这个可以叫做多线程

# 多进程:  在开一条流水线, 这条流水线和以前的一模一样

# 协程:  这个流水线上有的工人动作比较快,  空闲时间就玩手机,
#    让这个工人空闲时机就去做点其他事情




























